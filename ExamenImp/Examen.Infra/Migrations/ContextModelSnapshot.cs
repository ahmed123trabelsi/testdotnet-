// <auto-generated />
using System;
using Examen.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Bungalow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NombreChambre")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("bungalows");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Locataire", b =>
                {
                    b.Property<string>("CIN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Tel")
                        .HasColumnType("int");

                    b.HasKey("CIN");

                    b.ToTable("Locataires");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<double>("PrixOption")
                        .HasColumnType("float");

                    b.Property<int>("bungalowid")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("bungalowid");

                    b.ToTable("options");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Reservation", b =>
                {
                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocataireFK")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("BungalowFK")
                        .HasColumnType("int");

                    b.Property<int>("NombreJour")
                        .HasColumnType("int");

                    b.Property<int>("saison")
                        .HasColumnType("int");

                    b.HasKey("DateDebut", "LocataireFK", "BungalowFK");

                    b.HasIndex("BungalowFK");

                    b.HasIndex("LocataireFK");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Option", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Bungalow", "bungalow")
                        .WithMany("options")
                        .HasForeignKey("bungalowid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bungalow");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Reservation", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Bungalow", "bungalow")
                        .WithMany("reservations")
                        .HasForeignKey("BungalowFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Locataire", "Locataire")
                        .WithMany("reservations")
                        .HasForeignKey("LocataireFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locataire");

                    b.Navigation("bungalow");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Bungalow", b =>
                {
                    b.Navigation("options");

                    b.Navigation("reservations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Locataire", b =>
                {
                    b.Navigation("reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
